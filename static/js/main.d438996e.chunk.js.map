{"version":3,"sources":["Header.js","Note.js","NotesList.js","App.js","index.js"],"names":["Header","props","className","onClick","addNote","type","placeholder","value","searchText","onChange","onSearch","Note","note","title","e","updatedValue","target","editMeId","id","onType","description","remove","keepSearchMatches","doesMatchSearch","NotesList","noteElements","notes","filter","map","App","state","Date","now","newNotes","setState","updatedKey","updatedNotes","toLowerCase","titleMatch","includes","descriptionMatch","hasMatch","deleteMeId","stringifiedNotes","JSON","stringify","this","localStorage","setItem","getItem","savedNotes","parse","Component","rootElement","document","getElementById","ReactDOM","render"],"mappings":"oNAYeA,EAVA,SAACC,GAAD,OACX,yBAAQC,UAAU,aAAlB,UACI,oBAAIA,UAAU,oBAAd,gCACA,wBAAOA,UAAU,uBAAjB,UACI,wBAAQA,UAAU,UAAUC,QAASF,EAAMG,QAA3C,wBACA,uBAAOC,KAAK,OAAOC,YAAY,yBAAyBJ,UAAU,SAASK,MAAON,EAAMO,WAAYC,SAAUR,EAAMS,kBCiBjHC,EAtBF,SAACV,GAaV,OACI,qBAAIC,UAAU,OAAd,UACI,uBAAOG,KAAK,OAAOC,YAAY,QAAQJ,UAAU,cAAcK,MAAON,EAAMW,KAAKC,MAAOJ,SAd5E,SAACK,GACjB,IAAMC,EAAeD,EAAEE,OAAOT,MACxBU,EAAWhB,EAAMW,KAAKM,GAC5BjB,EAAMkB,OAAOF,EAAU,QAASF,MAY5B,0BAAUT,YAAY,iBAAiBJ,UAAU,oBAAoBK,MAAON,EAAMW,KAAKQ,YAAaX,SAVlF,SAACK,GACvB,IAAMC,EAAeD,EAAEE,OAAOT,MACxBU,EAAWhB,EAAMW,KAAKM,GAC5BjB,EAAMkB,OAAOF,EAAU,cAAeF,MAQlC,sBAAMZ,QANM,kBAAMF,EAAMoB,OAAOpB,EAAMW,KAAKM,KAMdhB,UAAU,eAAtC,mBChBNoB,EAAoB,SAACV,GAAD,OAAUA,EAAKW,iBAa1BC,EAVG,SAACvB,GACf,IAKMwB,EADgBxB,EAAMyB,MAAMC,OAAOL,GACNM,KALhB,SAAChB,GAAD,OACf,cAAC,EAAD,CAAMA,KAAMA,EAAoBO,OAAQlB,EAAMkB,OAAQE,OAAQpB,EAAMoB,QAA7CT,EAAKM,OAKhC,OAAO,oBAAIhB,UAAU,aAAd,SAA4BuB,KCTjCI,E,4MACJC,MAAQ,CACNJ,MAAO,CACL,CACER,GAAIa,KAAKC,MACTnB,MAAO,GACPO,YAAa,GACbG,iBAAiB,IAGrBf,WAAY,I,EAEdJ,QAAU,WACR,IAMM6B,EAAQ,CANE,CACdf,GAAIa,KAAKC,MACTnB,MAAO,GACPO,YAAa,GACbG,iBAAiB,IAEL,mBAAgB,EAAKO,MAAMJ,QACzC,EAAKQ,SAAS,CAAER,MAAOO,K,EAEzBd,OAAS,SAACF,EAAUkB,EAAYpB,GAC9B,IAaMqB,EAAe,EAAKN,MAAMJ,MAAME,KAbhB,SAAChB,GACrB,OAAIA,EAAKM,KAAOD,EACPL,EAEY,UAAfuB,GACFvB,EAAKC,MAAQE,EACNH,IAEPA,EAAKQ,YAAcL,EACZH,MAKb,EAAKsB,SAAS,CAAER,MAAOU,K,EAEzB1B,SAAW,SAACI,GACV,IAAMN,EAAaM,EAAEE,OAAOT,MAAM8B,cAC5BD,EAAe,EAAKN,MAAMJ,MAAME,KAAI,SAAChB,GAC3C,GAAKJ,EAGE,CACL,IAAMK,EAAQD,EAAKC,MAAMwB,cACnBjB,EAAcR,EAAKQ,YAAYiB,cAC/BC,EAAazB,EAAM0B,SAAS/B,GAC5BgC,EAAmBpB,EAAYmB,SAAS/B,GACxCiC,EAAWH,GAAcE,EAE/B,OADA5B,EAAKW,gBAAkBkB,EAChB7B,EARP,OADAA,EAAKW,iBAAkB,EAChBX,KAWT,EAAKsB,SAAS,CACZ1B,WAAYA,EACZkB,MAAOU,K,EAGXf,OAAS,SAACqB,GACR,IACMN,EAAe,EAAKN,MAAMJ,MAAMC,QADnB,SAACf,GAAD,OAAUA,EAAKM,KAAOwB,KAEzC,EAAKR,SAAS,CAAER,MAAOU,K,wDAEzB,WACE,IAAMO,EAAmBC,KAAKC,UAAUC,KAAKhB,MAAMJ,OACnDqB,aAAaC,QAAQ,aAAcL,K,+BAErC,WACE,IAAMA,EAAmBI,aAAaE,QAAQ,cAC9C,GAAIN,EAAkB,CACpB,IAAMO,EAAaN,KAAKO,MAAMR,GAC9BG,KAAKZ,SAAS,CAAER,MAAOwB,O,oBAG3B,WACE,OACE,gCACE,cAAC,EAAD,CAAQ1C,WAAYsC,KAAKhB,MAAMtB,WAAYJ,QAAS0C,KAAK1C,QAASM,SAAUoC,KAAKpC,WACjF,cAAC,EAAD,CAAWgB,MAAOoB,KAAKhB,MAAMJ,MAAOP,OAAQ2B,KAAK3B,OAAQE,OAAQyB,KAAKzB,gB,GAhF5D+B,aAsFHvB,ICrFTwB,G,MAAcC,SAASC,eAAe,SAC5CC,IAASC,OAAO,cAAC,EAAD,IAASJ,K","file":"static/js/main.d438996e.chunk.js","sourcesContent":["import React from \"react\";\n\nconst Header = (props) => (\n    <header className=\"app-header\">\n        <h1 className=\"app-header__title\">Super Sticky Notes</h1>\n        <aside className=\"app-header__controls\">\n            <button className=\"add-new\" onClick={props.addNote}>+ New Note</button>\n            <input type=\"text\" placeholder=\"Type here to search...\" className=\"search\" value={props.searchText} onChange={props.onSearch} />\n        </aside>\n    </header>\n);\n\nexport default Header;","import React from \"react\";\n\nconst Note = (props) => {\n    const updateTitle = (e) => {\n        const updatedValue = e.target.value;\n        const editMeId = props.note.id;\n        props.onType(editMeId, \"title\", updatedValue);\n    };\n    const updateDescription = (e) => {\n        const updatedValue = e.target.value;\n        const editMeId = props.note.id;\n        props.onType(editMeId, \"description\", updatedValue);\n    };\n    const clickDelete = () => props.remove(props.note.id);\n\n    return (\n        <li className=\"note\">\n            <input type=\"text\" placeholder=\"Title\" className=\"note__title\" value={props.note.title} onChange={updateTitle} />\n            <textarea placeholder=\"Description...\" className=\"note__description\" value={props.note.description} onChange={updateDescription} />\n            <span onClick={clickDelete} className=\"note__delete\">X</span>\n        </li>\n    );\n};\n\nexport default Note;","import React from \"react\";\nimport Note from \"./Note.js\";\n\nconst keepSearchMatches = (note) => note.doesMatchSearch;\n\n\nconst NotesList = (props) => {\n    const renderNote = (note) => (\n        <Note note={note} key={note.id} onType={props.onType} remove={props.remove} />\n    );\n\n    const searchMatches = props.notes.filter(keepSearchMatches);\n    const noteElements = searchMatches.map(renderNote);\n    return <ul className=\"notes-list\">{noteElements}</ul>;\n};\n\nexport default NotesList;","import React, { Component } from \"react\";\nimport Header from \"./Header.js\";\nimport NotesList from \"./NotesList.js\";\n\nclass App extends Component {\n  state = {\n    notes: [\n      {\n        id: Date.now(),\n        title: \"\",\n        description: \"\",\n        doesMatchSearch: true,\n      }\n    ],\n    searchText: \"\"\n  };\n  addNote = () => {\n    const newNote = {\n      id: Date.now(),\n      title: \"\",\n      description: \"\",\n      doesMatchSearch: true,\n    };\n    const newNotes = [newNote, ...this.state.notes];\n    this.setState({ notes: newNotes });\n  };\n  onType = (editMeId, updatedKey, updatedValue) => {\n    const updateIdMatch = (note) => {\n      if (note.id !== editMeId) {\n        return note;\n      } else {\n        if (updatedKey === \"title\") {\n          note.title = updatedValue;\n          return note;\n        } else {\n          note.description = updatedValue;\n          return note;\n        }\n      }\n    };\n    const updatedNotes = this.state.notes.map(updateIdMatch);\n    this.setState({ notes: updatedNotes });\n  };\n  onSearch = (e) => {\n    const searchText = e.target.value.toLowerCase();\n    const updatedNotes = this.state.notes.map((note) => {\n    if (!searchText) {\n      note.doesMatchSearch = true;\n      return note;\n    } else {\n      const title = note.title.toLowerCase();\n      const description = note.description.toLowerCase();\n      const titleMatch = title.includes(searchText);\n      const descriptionMatch = description.includes(searchText);\n      const hasMatch = titleMatch || descriptionMatch;\n      note.doesMatchSearch = hasMatch;\n      return note;\n    }\n    });\n    this.setState({\n      searchText: searchText, \n      notes: updatedNotes\n    });\n  };\n  remove = (deleteMeId) => {\n    const notIdMatch = (note) => note.id !== deleteMeId;\n    const updatedNotes = this.state.notes.filter(notIdMatch);\n    this.setState({ notes: updatedNotes });\n  };\n  componentDidUpdate () {\n    const stringifiedNotes = JSON.stringify(this.state.notes);\n    localStorage.setItem(\"savedNotes\", stringifiedNotes);\n}\n  componentDidMount() {\n    const stringifiedNotes = localStorage.getItem(\"savedNotes\");\n    if (stringifiedNotes) {\n      const savedNotes = JSON.parse(stringifiedNotes);\n      this.setState({ notes: savedNotes });\n    }\n  }\n  render() {\n    return (\n      <div>\n        <Header searchText={this.state.searchText} addNote={this.addNote} onSearch={this.onSearch}/>\n        <NotesList notes={this.state.notes} onType={this.onType} remove={this.remove} />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App.js\";\nimport \"./index.css\";\n\nconst rootElement = document.getElementById(\"root\");\nReactDOM.render(<App />, rootElement);\n"],"sourceRoot":""}